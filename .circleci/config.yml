
defaults: &defaults
  working_directory: /home/circleci/purposeindustries/content-editor
  parallelism: 1
  shell: /bin/bash --login

  environment:
    E2E_OUTPUT: $CIRCLE_TEST_REPORTS/e2e/
    E2E_SCREENSHOTS: $CIRCLE_ARTIFACTS/screenshots/
    E2E_ERRORSHOTS_OUTPUT: $CIRCLE_ARTIFACTS/e2e-errorshots/
    E2EPROFILE: sauceextended
    CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
  docker:
    - image: circleci/node:8.9.4

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout

      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/purposeindustries/content-editor

      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS

      - restore_cache:
          keys:
            - dependency-cache
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}

      - run: echo -e "$NPMRC" >>$HOME/.npmrc

      - run: npm i --prefer-offline

      - save_cache:
          key: dependency-cache
          paths:
          - ~/.npm
          - ./node_modules

      - run:
          name: install system wide tools
          command: sudo apt-get install tree

      - run:
          name: test
          command: npm run test

      - run:
          name: build assets
          command: npm run build
          environment:
            NODE_ENV: production

      - run:
          name: e2e test
          command: |
            if [[ $CIRCLE_BRANCH != *"master"* || ! -z $CIRCLE_TAG ]] ; then
              set +e; E2EPROFILE=saucelight npm run test:e2e; STATUS=$?;
            else
              set +e; npm run test:e2e; STATUS=$?;
            fi
            if [[ ! -z $FORCE_BUILD ]] ; then
              echo 'FORCE_BUILD active!'
              exit 0
            else
              exit $STATUS
            fi

      - store_test_results:
          path: /tmp/circleci-test-results
      # Save artifacts
      - store_artifacts:
          path: /tmp/circleci-artifacts
      - store_artifacts:
          path: /tmp/circleci-test-results

      - run:
          name: Create new release
          command: |
            if [ -n "$RELEASE_TYPE" ]; then
              git config --global user.email "dev@purposeindustries.co"
              git config --global user.name "purpose-bot"
              git config --global push.default simple
              npm version $RELEASE_TYPE --commit-hooks=false
              #git add package.json package-lock.json
              #VERSION=$(npm view content-editor version)
              #git commit --no-verify -m "chore: $RELEASE_TYPE bump to v$VERSION"
              git push -u origin $CIRCLE_BRANCH
              git push --tags
            else
              echo "No RELEASE_TYPE is present, skipping creating new release."
            fi
      - run:
          name: Publish new version to npm
          command: |
            # matches v1.2.3-next, or v1.2.3-1
            if [[ "$CIRCLE_TAG" =~ "^v(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(\-[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)+(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$" ]]; then
              npm publish
            else
              echo "We are not building a tag or the tag is not a valid semver ($CIRCLE_TAG)";
            fi

      - run:
          name: Deploy the version
          command: |
            if [[ "$CIRCLE_TAG" =~ "^v[0-9]+(\.[0-9]+)*$" ]]; then
              npm run deploy
            else
              echo "We are not build a tag, or the tag is not major, minor or patch but preversion"
            fi
